services:
  postgresql:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-useful}
      POSTGRES_USER: ${DB_USERNAME:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - useful_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-user} -d ${DB_DATABASE:-useful}"]
      interval: 30s
      timeout: 10s
      retries: 3

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: queue
    restart: unless-stopped
    working_dir: /var/www
    command: ["php", "artisan", "queue:work", "--tries=3", "--sleep=1"]
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
      - ./vendor:/var/www/vendor
      - ./node_modules:/var/www/node_modules
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - useful_network

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scheduler
    restart: unless-stopped
    working_dir: /var/www
    command: ["php", "artisan", "schedule:work"]
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
      - ./vendor:/var/www/vendor
      - ./node_modules:/var/www/node_modules
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - useful_network

volumes:
  postgres_data:
    driver: local
  storage:
    driver: local
  node_modules:
    driver: local

networks:
  useful_network:
    driver: bridge
